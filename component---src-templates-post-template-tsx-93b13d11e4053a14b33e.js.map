{"version":3,"file":"component---src-templates-post-template-tsx-93b13d11e4053a14b33e.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Post/PostHeadInfo.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHead.tsx","webpack://gatsby-starter-default/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-default/./src/components/Post/CommentWidget.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport Introduction from 'components/Main/Introduction'\n\nconst Title = styled.div`\n  display: -webkit-box;\n  font-size: 48px;\n  font-weight: 900;\n  padding-top: 30px;\n\n  @media (max-width: 768px) {\n    font-size: 30px;\n  }\n`\n\nconst PostData = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 10px;\n  font-size: 18px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    font-size: 15px;\n    font-weight: 400;\n  }\n`\n\nexport type PostHeadInfoProps = {\n  title: string\n  date: string\n  categories: string[]\n}\n\nconst PostHeadInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 630px;\n  height: 100%;\n  margin: 0 auto;\n  padding: 60px 0;\n  color: black;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 40px 20px;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = function ({\n  title,\n  date,\n}) {\n  return (\n    <>\n      <Introduction />\n      <PostHeadInfoWrapper className=\"postHead\">\n        <ButtonWrapper></ButtonWrapper>\n        <Title>{title}</Title>\n        <PostData>\n          <div style={{ fontSize: '12px', fontWeight: '300' }}>{date}</div>\n        </PostData>\n      </PostHeadInfoWrapper>\n    </>\n  )\n}\n\nexport default PostHeadInfo\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport PostHeadInfo, { PostHeadInfoProps } from 'components/Post/PostHeadInfo'\n\ntype PostHeadProps = PostHeadInfoProps & {\n  thumbnail: IGatsbyImageData\n}\n\nconst PostHeadWrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\n  title,\n  date,\n  categories,\n  // thumbnail,\n}) {\n  return (\n    <PostHeadWrapper>\n      <PostHeadInfo title={title} date={date} categories={categories} />\n    </PostHeadWrapper>\n  )\n}\n\nexport default PostHead\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\n\ninterface PostContentProps {\n  html: string\n}\n\nconst MarkdownRenderer = styled.div`\n  // Renderer Style\n  display: flex;\n  flex-direction: column;\n  width: 630px;\n  margin: 0 auto;\n  padding: 0 0;\n\n  // Markdown Style\n  line-height: 1.8;\n  font-size: 16px;\n  font-weight: 300;\n\n  // Apply Padding Attribute to All Elements\n  p {\n    padding: 16px 0;\n  }\n\n  // Adjust Heading Element Style\n  h1,\n  h2,\n  h3 {\n    font-weight: 800;\n    margin-bottom: 10px;\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: 10px;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  h1 {\n    font-size: 35px;\n  }\n\n  h2 {\n    font-size: 30px;\n  }\n\n  h3 {\n    font-size: 25px;\n  }\n\n  // Adjust Quotation Element Style\n\n  // Adjust List Element Style\n  ol,\n  ul {\n    margin-left: 20px;\n    padding: 0px 0;\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    border: 1px solid #000000;\n    margin: 100px 0;\n  }\n\n  // Adjust Link Element Style\n  a {\n    font-weight: bold;\n    color: #775fd5;\n    text-decoration: underline;\n  }\n\n  // Adjust Code Style\n  pre[class*='language-'] {\n    border-radius: 12px;\n    overflow: auto;\n    background: #232936;\n    ::-webkit-scrollbar-thumb {\n      background: rgba(255, 255, 255, 0.5);\n      border-radius: 3px;\n    }\n  }\n\n  code[class*='language-'] {\n    font-size: 14px;\n    background: inherit;\n    line-height: 1.4;\n    font-weight: 400;\n    letter-spacing: 1px;\n    word-spacing: 0.5px;\n  }\n\n  pre[class*='language-'] code[class*='language-'] {\n    background: inherit;\n  }\n\n  code[class*='text'] {\n    background-color: #775fd53a;\n    color: inherit;\n  }\n\n  // Markdown Responsive Design\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 80px 20px;\n    line-height: 1.6;\n    font-size: 14px;\n\n    h1 {\n      font-size: 23px;\n    }\n\n    h2 {\n      font-size: 20px;\n    }\n\n    h3 {\n      font-size: 17px;\n    }\n\n    img {\n      width: 100%;\n    }\n\n    hr {\n      margin: 50px 0;\n    }\n  }\n`\n\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\n  return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\n}\n\nexport default PostContent\n","import React, { createRef, FunctionComponent, useEffect } from 'react'\nimport styled from '@emotion/styled'\n\nconst src = 'https://utteranc.es/client.js'\nconst repo = 'imb96/imb96.github.io' // 자신 계정의 레포지토리로 설정\n\ntype UtterancesAttributesType = {\n  src: string\n  repo: string\n  'issue-term': string\n  label: string\n  theme: string\n  crossorigin: string\n  async: string\n}\n\nconst UtterancesWrapper = styled.div`\n  @media (max-width: 768px) {\n    padding: 0 20px;\n  }\n`\n\nconst CommentWidget: FunctionComponent = function () {\n  const element = createRef<HTMLDivElement>()\n\n  useEffect(() => {\n    if (element.current === null) return\n\n    const utterances: HTMLScriptElement = document.createElement('script')\n\n    const attributes: UtterancesAttributesType = {\n      src,\n      repo,\n      'issue-term': 'pathname',\n      label: 'Comment',\n      theme: `github-light`,\n      crossorigin: 'anonymous',\n      async: 'true',\n    }\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value)\n    })\n\n    element.current.appendChild(utterances)\n  }, [])\n\n  return <UtterancesWrapper ref={element} />\n}\n\nexport default CommentWidget\n","import React, { FunctionComponent } from 'react'\nimport { graphql } from 'gatsby'\nimport { PostFrontmatterType } from 'types/PostItem.types'\nimport Template from 'components/Common/Template'\nimport PostHead from 'components/Post/PostHead'\nimport PostContent from 'components/Post/PostContent'\nimport CommentWidget from 'components/Post/CommentWidget'\n\ntype PostTemplateProps = {\n  data: {\n    allMarkdownRemark: {\n      edges: PostPageItemType[]\n    }\n  }\n  location: {\n    href: string\n  }\n}\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n  location: { href },\n}) {\n  const {\n    node: {\n      html,\n      frontmatter: {\n        title,\n        summary,\n        date,\n        categories,\n        thumbnail: {\n          childImageSharp: { gatsbyImageData },\n          publicURL,\n        },\n      },\n    },\n  } = edges[0]\n\n  return (\n    <Template title={title} description={summary} url={href} image={publicURL}>\n      <PostHead\n        title={title}\n        date={date}\n        categories={categories}\n        thumbnail={gatsbyImageData}\n      />\n      <PostContent html={html} />\n      <CommentWidget />\n    </Template>\n  )\n}\n\nexport default PostTemplate\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport type PostPageItemType = {\n  node: {\n    html: string\n    frontmatter: PostFrontmatterType\n  }\n}\n"],"names":["Title","_styled","target","name","styles","PostData","PostHeadInfoWrapper","ButtonWrapper","_ref","title","date","___EmotionJSX","React","Introduction","className","style","fontSize","fontWeight","PostHeadWrapper","categories","PostHeadInfo","MarkdownRenderer","html","dangerouslySetInnerHTML","__html","UtterancesWrapper","element","createRef","useEffect","current","utterances","document","createElement","attributes","src","repo","label","theme","crossorigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","ref","edges","data","allMarkdownRemark","href","location","_edges$0$node","node","_edges$0$node$frontma","frontmatter","summary","_edges$0$node$frontma2","thumbnail","gatsbyImageData","childImageSharp","publicURL","Template","description","url","image","PostHead","PostContent","CommentWidget"],"sourceRoot":""}